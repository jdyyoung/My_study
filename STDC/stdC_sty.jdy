##Standard C Language Study##

20170815
字符串学习：
char str1[]="abc";
char str2[5]="abc";
char* str3 ="abc";

//-------------20180129-----------------------------
isspace():
#include<ctype.h>
函数功能 
判断输入字符是否为空格/回车/制表符等 
函数参数： 
获取实参char类型的字符 
函数返回值： 
如果获取到的字符是空格/回车/制表符等，返回非0值（即真）；否则返回0

char* original = strdup(buffer);
char* type = strtok(original+i, " \t\n");
char* key = strtok(NULL, " \t\n");
strdup();
strtok();
strtok();

fgets();
C语言文件操作之fgets（） - CSDN博客
https://blog.csdn.net/daiyutage/article/details/8540932

//===================20190629===================================
C 标准库 – <ctype.h> | 菜鸟教程 - https://www.runoob.com/cprogramming/c-standard-library-ctype-h.html
C 标准库的 ctype.h 头文件提供了一些函数，可用于测试和映射字符。
isdigit()

//-----------------------------20200301------------------------------------------
C 库函数 – sscanf() | 菜鸟教程 - https://www.runoob.com/cprogramming/c-function-sscanf.html
C 库函数 int sscanf(const char *str, const char *format, ...) 从字符串读取格式化输入。
sscanf():左边字符串严格按照格式赋值到右边变量

//-----------------------------20200314------------------------------------------
//rtsp://192.168.31.115:8554/live
sscanf(url, "rtsp://%[^:]:", localIp);

//---------------------------20200501-------------------------------------------------

可变参数列表与printf()函数的实现 - chenguan - 博客园 - https://www.cnblogs.com/guanguangreat/p/6119278.html
对C的printf函数的可变长参数实现的分析_c/c++_shexujia的专栏-CSDN博客 - https://blog.csdn.net/shexujia/article/details/19125981
C语言中的可变参数函数 三个点“…” - sticker - 博客园 - https://www.cnblogs.com/sticker/p/9988237.html
C语言 ## __VA_ARGS__ 宏 - AlexShi - 博客园 - https://www.cnblogs.com/alexshi/archive/2012/03/09/2388453.html
宏定义中的##操作符和... and _ _VA_ARGS_ _ - DoubleLi - 博客园 - https://www.cnblogs.com/lidabo/p/4570949.html
va在这里是variable-argument(可变参数)的意思。
原理：利用函数形参的栈地址指针，所以必须至少有一个参数，为形参的首地址

先看看stdarg.h文件下这三个宏的实现：
第一种：
typedef char  *va_list;
#define va_start(ap,v)   ap = (va_list)&v + sizeof(v)
#define va_arg(ap,t)      (((t *)ap)++[0])
#define va_end(ap)

第二种：
typedef char  *va_list;  
#define _INTSIZEOF(n)   ((sizeof(n) + sizeof(int) - 1) & ~(sizeof(int) - 1) )  
#define va_start(ap,v)        ( ap = (va_list)&v + _INTSIZEOF(v) )  
#define va_arg(ap,type)     (*(type *)((ap += _INTSIZEOF(t)) - _INTSIZEOF(t)) )  
#define va_end(ap)             ( ap = (va_list)0 ) 

_INTSIZEOF(n)：为了字节对齐，将n的长度化为int长度的整数倍。
在32位系统中，~(sizeof(int)–1) )展开为~（4-1）=~（00000011b）=11111100b，这样任何数& ~(sizeof(int)–1) )后最后两位肯定为0，也就是4的整数倍。

每个平台下的stdarg.h头文件的定义都不相同，但是意思都一样：
(1) va_list：    定义一个va_list型的变量ap，也就是char *；
(2) va_start：	获取到可变参数表的首地址，并将该地址赋给指针ap； //ap指向第二个参数
(3) va_arg：   获取当前ap所指向的可变参数，并将指针ap指向下一个可变参数。注意，该宏的第二个参数为类型；
(4) va_end：   结束可变参数的获取。

jdy:
可变参数的类型理论上参数类型需要一样，因为要用上va_arg(ap,t)不大
当有vsprintf()与vsnprintf()，即可类型不一样，这是因为有格式化限制了

-----------------------------------20200531------------------------------------------------------
strdup和strndup函数 - 龟龟大宝 - 博客园 - https://www.cnblogs.com/yinguojin/p/10195700.html
strdup()与strndup()
功能：将字符串拷贝到新建的位置处
返回值 ：返回一个指针，指向为复制字符串分配的空间。如果分配空间失败，则返回NULL值。